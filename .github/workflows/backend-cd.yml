name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER : postgres
          POSTGRES_PASSWORD : postgres
          POSTGRES_DB : customers
        ports:
          - "5433:5432"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Deployment Started :progress_bar: :fingerscrossed:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":maven: Building with maven"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build package push with maven
        run: mvn -ntp -B verify -D docker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":docker: Image tag: ${{steps.build-number.outputs.BUILD_NUMBER}} 
          pushed to https://hub.docker.com/repository/docker/siddhu745/spring-boot-practice-api"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json api image tag with new Build number
        run: |
          echo "Dockerrun.aws.json before updating the tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(siddhu745/spring-boot-practice-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating the tag"
          cat Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":aws: Starting deployment to Elastic Beanstalk"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":":githubloading: Committing to https://github.com/siddhu745/spring-full-stack"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Deployment and commit completed :github_check_mark: :party_blob: - http://foo4-env.eba-ak5haxmk.ap-south-1.elasticbeanstalk.com/api/v1/customers"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
          {"text":"Job Status ${{ job.status }}"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
